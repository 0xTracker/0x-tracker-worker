const getAffiliateAddress = require('./get-affiliate-address');
const getQuoteDate = require('./get-quote-date');

it('should return affiliate address for call data which does not also contain a quote date', () => {
  const callData =
    '0x1cff79cd000000000000000000000000d6693e193e30ff94096d85fd2fd4a5be0b57fbc100000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000604dcfc170500000000000000000000000000000000000000000000000000000000000006d1000000000000000000000000000000000000000000000000c249fdd32778000000000000000000000000000000000000000000000000000e6dc798d38218f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e93173059860011e40000000000000000000000002f0b23f53734252bda2277357e97e1517d6b042a0000000000000000000000004ef40d1bf0983899892946830abf99eca2dbc5ce000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000004a8907e5cc3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000f342f3a80fdc9b48713d58fe97e17f5cc764ee620000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f3c09092572d57feca000000000000000000000000000000000000000000000000e890603659ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000967a67f0d1cdb67087b2e570d70ba9b045085ff0231dcaca5a9a833bf3577b044ef4d04900000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000000a4dc1600f30000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000f342f3a80fdc9b48713d58fe97e17f5cc764ee6200000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024f47261b0000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000fbc019a7000000000000000000000000100000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';

  const affiliateAddress = getAffiliateAddress(callData);
  const quoteDate = getQuoteDate(callData);

  expect(quoteDate).toBeNull();
  expect(affiliateAddress).toBe('0x1000000000000000000000000000000000000011');
});

it('should return affiliate address for call data which also contains a quote date', () => {
  const callData =
    '0x5f575529000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000224e4ee71cc400000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000c307846656544796e616d69630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b591e99afe9f32eaa6214f7b7629768c40eeb390000000000000000000000000000000000000000000000000220176884a462000000000000000000000000000000000000000000000000000000006489a7d84e00000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000004cd85ed27de0000000000000000000000000011ededebf63bef0ea2d2d071bdf88f71543ec6fb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000128d9627aa400000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000220176884a462000000000000000000000000000000000000000000000000000000006489a7d84e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000002b591e99afe9f32eaa6214f7b7629768c40eeb39869584cd00000000000000000000000011ededebf63bef0ea2d2d071bdf88f71543ec6fb0000000000000000000000000000000000000000000000f11cf7e1f260c4a890000000000000000000000000000000000000000000000000a7';

  const affiliateAddress = getAffiliateAddress(callData);
  const quoteDate = getQuoteDate(callData);

  expect(quoteDate).not.toBeNull();

  expect(affiliateAddress).toEqual(
    '0x11ededebf63bef0ea2d2d071bdf88f71543ec6fb',
  );
});

it('should return null when call data does not contain an affiliate address', () => {
  const callData =
    '0xa32fe0a100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000444645a55b642a87dbe6329d818aa84ae4477bd93174f8f7eb81a68185e2c4ad73087cbe1d8000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000000000000000000000000000000000000000000032464a3bc150000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000169eec5d27e3000000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000056178a0d5f301baf6cf3e1cd53d9863437345bf90000000000000000000000008d90113a1e286a5ab3e496fbd1853f265e5913c6000000000000000000000000465eea759643116c69174f46f5c181e7a4b3cf9a0000000000000000000000008d90113a1e286a5ab3e496fbd1853f265e5913c600000000000000000000000000000000000000000000000000000000eac91c02000000000000000000000000000000000000000000000000169eec5d27e30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060c4a9c73880c488a3464a8318e348f94032fc26e5e0fa7b34f92a3a2e0e73f7be7b0016000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000024f47261b0000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024f47261b0000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000421ce75970d904b87b37e74e05e24dcd9d080d77ffd0438264233496e5d6cbe1396801f431ba7a5d198ee7091f6fab1438d12a26f73a010030323a1b506608410b34030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000561bd6347b4ad9b8a8734175a0751a848e2d5ae25983628de0dbd32cdbcb6d68dcb265b599616d4f1a40e2a4ae248c8271d0eb329af80645394af36e10ad4cdb0876465eea759643116c69174f46f5c181e7a4b3cf9a040000000000000000000000000000000000000000000000000000000000000000000000000000';

  const affiliateAddress = getAffiliateAddress(callData);

  expect(affiliateAddress).toBeNull();
});
